{"version":3,"sources":["GameContext.js","components/Field.js","components/Score.js","components/GameOver.js","components/GitHub.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["GameContext","React","createContext","Rnd","Math","random","a","GameProvider","children","parseInt","localStorage","getItem","useState","score","setScore","gameOver","setGameOver","initialField","useEffect","locSt","setItem","localStorageParser","gameField","setGameField","grid","split","map","element","slice","localField","setLocalField","setTimeout","Provider","value","Field","context","useContext","rowGenerator","num","number","index","className","Score","maxScore","GameOver","clickHandler","onClick","GitHub","href","mover","num1","num2","RandomFill","fl","filled","floor","b","possibleMoves","Game","props","xDown","yDown","handleTouchStart","evt","firstTouch","touches","originalEvent","getTouches","clientX","clientY","handleTouchMove","xUp","yUp","xDiff","yDiff","abs","window","dispatchEvent","KeyboardEvent","myref","useRef","handleKeyDown","event","key","count","j","i","prevState","fill","every","elem","addEventListener","e","current","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8b555d5.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nexport const GameContext = React.createContext()\r\n\r\nfunction Rnd() {\r\n    if(Math.random()<0.25){\r\n        return 2\r\n    }\r\n    else {return 0}\r\n}\r\n\r\nlet a =0\r\nexport const GameProvider = ({children}) => {\r\n\r\n\r\n    if(parseInt(localStorage.getItem('2048score'))){\r\n        a=(parseInt(localStorage.getItem('2048score')))\r\n    }\r\n    const [score, setScore] = useState(a)\r\n\r\n\r\n    const [gameOver, setGameOver] = useState(false)\r\n\r\n\r\n    const initialField = [\r\n        [Rnd(),Rnd(),Rnd(),Rnd()],\r\n        [Rnd(),Rnd(),Rnd(),Rnd()],\r\n        [Rnd(),Rnd(),Rnd(),Rnd()],\r\n        [Rnd(),Rnd(),Rnd(),Rnd()]  ]\r\n\r\n  //   const initialField = [\r\n  //       [4,4,4,4],\r\n  //       [2048,512,1024,512],\r\n  //       [256,1024,512,256],\r\n  //       [2048,512,1024,512],\r\n  //\r\n  // ]\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(gameOver){\r\n            let locSt = parseInt(localStorage.getItem('2048maxScore'))\r\n             localStorage.setItem(('grid'), initialField)\r\n            if(!locSt){\r\n                localStorage.setItem('2048maxScore', score)\r\n            }\r\n        if(locSt<score){\r\n            localStorage.setItem('2048maxScore', score)\r\n        }\r\n\r\n// console.log(locSt)\r\n           // localStorage.setItem('maxScore', score)\r\n        }\r\n    }, [gameOver])\r\n\r\n\r\n\r\nif (!localStorage.getItem(('grid'))){\r\n    localStorage.setItem(('grid'), initialField)\r\n}\r\n    const [gameField, setGameField] = useState(\r\n        localStorageParser()\r\n    )\r\n    function localStorageParser(){\r\n        let grid = localStorage.getItem('grid')\r\n        grid = grid.split(',')\r\n        grid=grid.map(element => parseInt(element))\r\n\r\n        return [grid.slice(0,4), grid.slice(4,8), grid.slice(8,12), grid.slice(12,16)]\r\n\r\n    }\r\n\r\n    const [localField, setLocalField] = useState(localStorageParser())\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n        setTimeout(()=>{\r\n            setLocalField([localStorageParser()]\r\n            )\r\n            localStorage.setItem('grid', gameField)\r\n        }, 0)\r\n\r\n\r\n\r\n    }, [gameField])\r\n\r\n    return(        <GameContext.Provider value={{\r\n\r\n        gameField,setGameField,\r\n        score, setScore,\r\n        gameOver, setGameOver,\r\n        initialField,\r\n        localField, setLocalField\r\n\r\n\r\n    }}>\r\n        {children}\r\n    </GameContext.Provider>)\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {GameContext} from \"../GameContext\";\r\nimport './Field.css'\r\n\r\nexport const Field = ()=>{\r\n\r\nconst context = useContext(GameContext)\r\n\r\n\r\n//WITH INDEX\r\n    // function rowGenerator(num) {\r\n    //     const rw = context.gameField[num].map((number, index) => {\r\n    //       //  `cellValue${number}`\r\n    //         return (\r\n    //             <div className={`cell cellValue${number}`} key={`row${num}_${index}`}>{number}\r\n    //             <br/>\r\n    //                index[{num} {index}]\r\n    //             </div>)\r\n    //     })\r\n    //     return rw\r\n    // }\r\n\r\n\r\n    function rowGenerator(num) {\r\n\r\n            const rw = context.gameField[num].map((number, index) => {\r\n                //  `cellValue${number}`\r\n                return (\r\n                    <div className={`cell cellValue${number}`} key={`row${num}_${index}`}>{number}\r\n\r\n                    </div>)\r\n            })\r\n            return rw\r\n\r\n    }\r\n\r\n    // console.log(context.localField)\r\n    // console.log(context.gameField)\r\n\r\n\r\n    return(\r\n        <>\r\n\r\n<div className='containerGame'>\r\n        <div className='mt-5 gameGrid'>\r\n            <div>{rowGenerator(0)}</div>\r\n            <div>{rowGenerator(1)}</div>\r\n            <div>{rowGenerator(2)}</div>\r\n            <div>{rowGenerator(3)}</div>\r\n        </div>\r\n</div>\r\n            </>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {GameContext} from \"../GameContext\";\r\nimport './Field.css'\r\n\r\nexport const Score = ()=>{\r\n\r\n\r\n    const context = useContext(GameContext)\r\n\r\n    const maxScore = localStorage.getItem('2048maxScore')\r\n\r\n    useEffect(()=>{\r\n        if(!localStorage.getItem('2048score')){\r\n            localStorage.setItem('2048score', 0)\r\n        }\r\n\r\n        localStorage.setItem('2048score', context.score)\r\n//console.log(context.score)\r\n\r\n        let locSt = parseInt(localStorage.getItem('2048maxScore'))\r\n                if(!locSt){\r\n                    localStorage.setItem('2048maxScore', context.score)\r\n                }\r\n                if(locSt<context.score) {\r\n                    localStorage.setItem('2048maxScore', context.score)\r\n                }\r\n\r\n            },[context.score])\r\n\r\n    return(<div>\r\n\r\n        <h2>current <span className=\"badge bg-light text-dark\">{context.score}</span></h2>\r\n        <h2>max <span className=\"badge bg-light text-dark\">{maxScore}</span></h2>\r\n\r\n    </div>)\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {GameContext} from \"../GameContext\";\r\nimport './Field.css'\r\n\r\nfunction localStorageParser(){\r\n    let grid = localStorage.getItem('grid')\r\n    grid = grid.split(',')\r\n    grid=grid.map(element => parseInt(element))\r\n\r\n    return [grid.slice(0,4), grid.slice(4,8), grid.slice(8,12), grid.slice(12,16)]\r\n\r\n}\r\n\r\nexport const GameOver = ()=>{\r\n\r\n\r\n    const context = useContext(GameContext)\r\n\r\n    const clickHandler = ()=>{\r\n        // context.setGameField(context.initialField)\r\n        context.setScore(0)\r\n        context.setGameOver(false)\r\n        localStorage.setItem('grid', context.initialField)\r\n        context.setLocalField(localStorageParser())\r\n        context.setGameField(localStorageParser())\r\n        // window.location.reload();\r\n    }\r\n\r\n\r\n    if(context.gameOver){\r\n        return(<div>\r\n            <h1>Game Over</h1>\r\n            <button className='btn btn-outline-warning btn-lg m-2' onClick={clickHandler}>reset!</button>\r\n        </div>)\r\n    }\r\n    else{\r\n        return (<div>\r\n            <button className='btn btn-outline-warning btn-sm m-5' onClick={clickHandler}>reset</button>\r\n        </div>)\r\n    }\r\n\r\n\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport './Github.css'\r\nimport './Field.css'\r\n\r\nexport const GitHub = ()=>{\r\n\r\n\r\n\r\n        return(<div className='github'>\r\n\r\n            <a href='https://github.com/kfivap/2048game' className='btn btn-light m-2' >&#9733; Star me on GitHub! &#9733;</a>\r\n        </div>)\r\n\r\n}","import React, {useContext, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport {Field} from \"./Field\";\r\nimport {GameContext} from \"../GameContext\";\r\nimport {Score} from \"./Score\";\r\nimport {GameOver} from \"./GameOver\";\r\nimport {GitHub} from \"./GitHub\";\r\n\r\n\r\nfunction mover(num1, num2) {\r\n\r\n    if (num1 === num2 && num2 !== 0) {\r\n        return true\r\n    }\r\n        // if (num1===0 ){\r\n        //     return true\r\n    // }\r\n    else {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction RandomFill(fl) {\r\n    // if (Math.random() < 0.08) {\r\n    //     return 2\r\n    // } else {\r\n    //     return 0\r\n    // }\r\n\r\n    let filled = false\r\n\r\n    while (!filled){\r\n        let a =Math.floor(Math.random() * 4);\r\n        let b =Math.floor(Math.random() * 4);\r\n        if (fl[a][b] === 0) {\r\n            fl[a][b] = 2\r\n            filled = true\r\n            break\r\n        }\r\n    }\r\n\r\n    //  console.log(fl)\r\n\r\n    return fl\r\n\r\n}\r\n\r\n\r\n\r\nlet possibleMoves = [true, true, true, true] //up down left right\r\n\r\nexport const Game = (props) => {\r\n\r\n    const context = useContext(GameContext)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    var xDown = null;\r\n    var yDown = null;\r\n\r\n    function getTouches(evt) {\r\n        return evt.touches ||             // browser API\r\n            evt.originalEvent.touches; // jQuery\r\n    }\r\n\r\n    function handleTouchStart(evt) {\r\n        const firstTouch = getTouches(evt)[0];\r\n        xDown = firstTouch.clientX;\r\n        yDown = firstTouch.clientY;\r\n    };\r\n\r\n    function handleTouchMove(evt) {\r\n        if ( ! xDown || ! yDown ) {\r\n            return;\r\n        }\r\n\r\n        var xUp = evt.touches[0].clientX;\r\n        var yUp = evt.touches[0].clientY;\r\n\r\n        var xDiff = xDown - xUp;\r\n        var yDiff = yDown - yUp;\r\n\r\n        if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {/*most significant*/\r\n            if ( xDiff > 0 ) {\r\n                // console.log( 'left swipe')\r\n                window.dispatchEvent(new KeyboardEvent('keydown',{'key':'ArrowLeft'}));\r\n            } else {\r\n                // console.log( 'right swipe')\r\n                window.dispatchEvent(new KeyboardEvent('keydown',{'key':'ArrowRight'}));\r\n            }\r\n        } else {\r\n            if ( yDiff > 0 ) {\r\n                // console.log( 'up swipe')\r\n                window.dispatchEvent(new KeyboardEvent('keydown',{'key':'ArrowUp'}));\r\n            } else {\r\n                // console.log( 'down swipe')\r\n                window.dispatchEvent(new KeyboardEvent('keydown',{'key':'ArrowDown'}));\r\n            }\r\n        }\r\n        /* reset values */\r\n\r\n        xDown = null;\r\n        yDown = null;\r\n\r\n    };\r\n\r\n    const myref = useRef()\r\n\r\n\r\n    function localStorageParser(){\r\n        let grid = localStorage.getItem('grid')\r\n        grid = grid.split(',')\r\n        grid=grid.map(element => parseInt(element))\r\n\r\n        return [grid.slice(0,4), grid.slice(4,8), grid.slice(8,12), grid.slice(12,16)]\r\n\r\n    }\r\n    function handleKeyDown(event) {\r\n\r\n\r\n        const fl = localStorageParser()\r\n\r\n        if (event.key === 'ArrowUp') {\r\n            // console.log(event.key)\r\n\r\n            let count = 0\r\n            for (let j = 0; j < 4; j++) {\r\n\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (fl[0][j] === 0 && fl[1][j] !== 0) {\r\n                        fl[0][j] = fl[1][j]\r\n                        fl[1][j] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[1][j] === 0 && fl[2][j] !== 0) {\r\n                        fl[1][j] = fl[2][j]\r\n                        fl[2][j] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[2][j] === 0 && fl[3][j] !== 0) {\r\n                        fl[2][j] = fl[3][j]\r\n                        fl[3][j] = 0\r\n                        count = count + 1\r\n                    }\r\n                }\r\n\r\n\r\n                if (mover(fl[0][j], fl[1][j])) {\r\n                    fl[0][j] += fl[1][j]\r\n                    fl[1][j] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[0][j])\r\n                }\r\n                if (mover(fl[1][j], fl[2][j])) {\r\n                    fl[1][j] += fl[2][j]\r\n                    fl[2][j] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[1][j])\r\n                }\r\n\r\n                if (mover(fl[2][j], fl[3][j])) {\r\n                    fl[2][j] += fl[3][j]\r\n                    fl[3][j] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[2][j])\r\n                }\r\n\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (fl[0][j] === 0 && fl[1][j] !== 0) {\r\n                        fl[0][j] = fl[1][j]\r\n                        fl[1][j] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[1][j] === 0 && fl[2][j] !== 0) {\r\n                        fl[1][j] = fl[2][j]\r\n                        fl[2][j] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[2][j] === 0 && fl[3][j] !== 0) {\r\n                        fl[2][j] = fl[3][j]\r\n                        fl[3][j] = 0\r\n                        count = count + 1\r\n                    }\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n            if (count > 0) {\r\n                RandomFill(fl)\r\n                possibleMoves.fill(true)\r\n            }\r\n            if (count ===0){\r\n                possibleMoves[0] =false\r\n\r\n            }\r\n            count = 0\r\n        }\r\n\r\n        if (event.key === 'ArrowDown') {\r\n            // console.log(event.key)\r\n            let count = 0\r\n\r\n            for (let j = 0; j < 4; j++) {\r\n\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (fl[3][j] === 0 && fl[2][j] !== 0) {\r\n                        fl[3][j] = fl[2][j]\r\n                        fl[2][j] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[2][j] === 0 && fl[1][j] !== 0) {\r\n                        fl[2][j] = fl[1][j]\r\n                        fl[1][j] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[1][j] === 0 && fl[0][j] !== 0) {\r\n                        fl[1][j] = fl[0][j]\r\n                        fl[0][j] = 0\r\n                        count = count + 1\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                if (mover(fl[3][j], fl[2][j])) {\r\n                    fl[3][j] += fl[2][j]\r\n                    fl[2][j] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[3][j])\r\n                }\r\n                if (mover(fl[2][j], fl[1][j])) {\r\n                    fl[2][j] += fl[1][j]\r\n                    fl[1][j] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[2][j])\r\n                }\r\n\r\n                if (mover(fl[1][j], fl[0][j])) {\r\n                    fl[1][j] += fl[0][j]\r\n                    fl[0][j] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[1][j])\r\n                }\r\n\r\n\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (fl[3][j] === 0 && fl[2][j] !== 0) {\r\n                        fl[3][j] = fl[2][j]\r\n                        fl[2][j] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[2][j] === 0 && fl[1][j] !== 0) {\r\n                        fl[2][j] = fl[1][j]\r\n                        fl[1][j] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[1][j] === 0 && fl[0][j] !== 0) {\r\n                        fl[1][j] = fl[0][j]\r\n                        fl[0][j] = 0\r\n                        count = count + 1\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (count > 0) {\r\n                RandomFill(fl)\r\n                possibleMoves.fill(true)\r\n            }\r\n            if (count ===0){\r\n                possibleMoves[1] =false\r\n            }\r\n            count = 0\r\n        }\r\n\r\n        if (event.key === 'ArrowLeft') {\r\n            // console.log(event.key)\r\n            let count = 0\r\n\r\n            for (let j = 0; j < 4; j++) {\r\n\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (fl[j][0] === 0 && fl[j][1] !== 0) {\r\n                        fl[j][0] = fl[j][1]\r\n                        fl[j][1] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[j][1] === 0 && fl[j][2] !== 0) {\r\n                        fl[j][1] = fl[j][2]\r\n                        fl[j][2] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[j][2] === 0 && fl[j][3] !== 0) {\r\n                        fl[j][2] = fl[j][3]\r\n                        fl[j][3] = 0\r\n                        count = count + 1\r\n                    }\r\n                }\r\n\r\n\r\n                if (mover(fl[j][0], fl[j][1])) {\r\n                    fl[j][0] += fl[j][1]\r\n                    fl[j][1] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[j][0])\r\n                }\r\n                if (mover(fl[j][1], fl[j][2])) {\r\n                    fl[j][1] += fl[j][2]\r\n                    fl[j][2] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[j][1])\r\n                }\r\n\r\n                if (mover(fl[j][2], fl[j][3])) {\r\n                    fl[j][2] += fl[j][3]\r\n                    fl[j][3] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[j][2])\r\n                }\r\n\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (fl[j][0] === 0 && fl[j][1] !== 0) {\r\n                        fl[j][0] = fl[j][1]\r\n                        fl[j][1] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[j][1] === 0 && fl[j][2] !== 0) {\r\n                        fl[j][1] = fl[j][2]\r\n                        fl[j][2] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[j][2] === 0 && fl[j][3] !== 0) {\r\n                        fl[j][2] = fl[j][3]\r\n                        fl[j][3] = 0\r\n                        count = count + 1\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            if (count > 0) {\r\n                RandomFill(fl)\r\n                possibleMoves.fill(true)\r\n            }\r\n            if (count ===0){\r\n                possibleMoves[2] =false\r\n            }\r\n            count = 0\r\n\r\n        }\r\n\r\n        if (event.key === 'ArrowRight') {\r\n            // console.log(event.key)\r\n\r\n            let count = 0\r\n\r\n\r\n            for (let j = 0; j < 4; j++) {\r\n\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (fl[j][3] === 0 && fl[j][2] !== 0) {\r\n                        fl[j][3] = fl[j][2]\r\n                        fl[j][2] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[j][2] === 0 && fl[j][1] !== 0) {\r\n                        fl[j][2] = fl[j][1]\r\n                        fl[j][1] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[j][1] === 0 && fl[j][0] !== 0) {\r\n                        fl[j][1] = fl[j][0]\r\n                        fl[j][0] = 0\r\n                        count = count + 1\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                if (mover(fl[j][3], fl[j][2])) {\r\n                    fl[j][3] += fl[j][2]\r\n                    fl[j][2] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[j][3])\r\n                }\r\n                if (mover(fl[j][2], fl[j][1])) {\r\n                    fl[j][2] += fl[j][1]\r\n                    fl[j][1] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[j][2])\r\n                }\r\n\r\n                if (mover(fl[j][1], fl[j][0])) {\r\n                    fl[j][1] += fl[j][0]\r\n                    fl[j][0] = 0\r\n                    count = count + 1\r\n                    context.setScore(prevState => prevState+fl[j][1])\r\n                }\r\n\r\n\r\n                for (let i = 0; i < 2; i++) {\r\n                    if (fl[j][3] === 0 && fl[j][2] !== 0) {\r\n                        fl[j][3] = fl[j][2]\r\n                        fl[j][2] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[j][2] === 0 && fl[j][1] !== 0) {\r\n                        fl[j][2] = fl[j][1]\r\n                        fl[j][1] = 0\r\n                        count = count + 1\r\n                    }\r\n                    if (fl[j][1] === 0 && fl[j][0] !== 0) {\r\n                        fl[j][1] = fl[j][0]\r\n                        fl[j][0] = 0\r\n                        count = count + 1\r\n                    }\r\n                }\r\n\r\n                //      console.log(count)\r\n                //filler\r\n\r\n\r\n\r\n\r\n            }\r\n            if (count > 0) {\r\n                RandomFill(fl)\r\n                //   console.log(fl)\r\n                possibleMoves.fill(true)\r\n            }\r\n            if (count ===0){\r\n                possibleMoves[3] =false\r\n            }\r\n            count = 0\r\n        }\r\n\r\n        //console.log(possibleMoves)\r\n        if (possibleMoves.every(elem => !elem)){\r\n            context.setGameOver(true)\r\n        }\r\n\r\n// localStorage.setItem('grid', fl)\r\n         context.setGameField(fl)\r\n\r\n        // localStorage.setItem('grid', fl)\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n            window.addEventListener('keydown', (e) => {\r\n                handleKeyDown(e)\r\n\r\n            })\r\n\r\n            setTimeout( ()=>{\r\n                myref.current.addEventListener('touchstart', handleTouchStart, false);\r\n                myref.current.addEventListener('touchmove', handleTouchMove, false);},0)\r\n\r\n\r\n        }\r\n        , [])\r\n\r\n\r\n    return (<div\r\n    >\r\n\r\n        <h1>game</h1>\r\n        <Score/>\r\n        <div ref={myref}>\r\n            <Field/>\r\n        </div>\r\n        <GameOver/>\r\n        <GitHub/>\r\n\r\n    </div>)\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {GameProvider} from \"./GameContext\";\nimport React from \"react\";\nimport {Game} from \"./components/Game\";\n\n\nfunction App() {\n  return (\n      <GameProvider>\n          <div className=\"App\">\n\n              <Game/>\n          </div>\n      </GameProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}